/*
 * Ergo Node API
 *
 * API docs for Ergo Node. Models are shared between all Ergo products
 *
 * API version: 4.0.23
 * Contact: ergoplatform@protonmail.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package ergo_rest

// ErgoLikeContext struct for ErgoLikeContext
type ErgoLikeContext struct {
	LastBlockUtxoRoot AvlTreeData `json:"lastBlockUtxoRoot"`
	// fixed number of last block headers in descending order (first header is the newest one)
	Headers   []SigmaHeader `json:"headers"`
	PreHeader PreHeader     `json:"preHeader"`
	// boxes, that corresponds to id's of `spendingTransaction.dataInputs`
	DataBoxes []ErgoTransactionOutput `json:"dataBoxes"`
	// boxes, that corresponds to id's of `spendingTransaction.inputs`
	BoxesToSpend        []ErgoTransactionOutput `json:"boxesToSpend"`
	SpendingTransaction ErgoLikeTransaction     `json:"spendingTransaction"`
	// index of the box in `boxesToSpend` that contains the script we're evaluating
	SelfIndex int64 `json:"selfIndex"`
	// prover-defined key-value pairs, that may be used inside a script
	Extension map[string]interface{} `json:"extension"`
	// validation parameters passed to Interpreter.verify to detect soft-fork conditions
	ValidationSettings string `json:"validationSettings"`
	// hard limit on accumulated execution cost, if exceeded lead to CostLimitException to be thrown
	CostLimit int64 `json:"costLimit"`
	// initial value of execution cost already accumulated before Interpreter.verify is called
	InitCost int64 `json:"initCost"`
}
